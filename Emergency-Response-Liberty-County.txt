if game.PlaceId ~= 2534724415 then
    game:Shutdown()
    return
end

if not game:IsLoaded() then
    game.Loaded:Wait()
    wait(8)
end

local yield = coroutine.yield
local exploit = (syn and not is_sirhurt_closure and not pebc_execute and "Synapse" or getexecutorname and identifyexecutor() == "ScriptWare" and "Script-Ware")
if not hookmetamethod then
    return;
end

if getgenv()["TSLoaded"] then
    return;
end

local S2, R2 = pcall(function()
    local Ignore = {}
    local Count = 0
    local function Hook(...)
        script:WaitForChild("NoThanks")
        return {}
    end
    for i, v in pairs(getreg()) do
        if type(v) == "function" and (getfenv(v).HookFuncs or (#getupvalues(v) >= 4 and type(getupvalue(v, 1)) == "number" and type(getupvalue(v, 3)) == "function")) and not Ignore[v] then
            if Count >= 80 then
                wait(0.2)
                Count = 0
            end

            for i2,v2 in next, getprotos(v) do
                v2 = Hook
                setfenv(v2, {})
            end

            v = Hook

            setfenv(v, {})

            Ignore[v] = true
            Count += 1
        end
    end
end)

wait(0.6)

local OldNamecall
OldNamecall = hookmetamethod(game, "__namecall", function(self, ...)
    local Arguments = {...}
    local Frenchie = false

    if self.ClassName == "RemoteEvent" or self.ClassName == "RemoteFunction" then
        if self.Name == "AutoDetection" or self.Name == "RandomEvent" or rawget(getfenv(0), "script").Parent == nil then
            yield()
            return;
        end

        for i,v in next, Arguments do
            if type(v) == "string" and (string.find(v, "#") or #v == 2 or #v == 1) then
                yield()
                Frenchie = true
            end
        end

        if Frenchie then
            yield()
            return;
        end
    end

    return OldNamecall(self, ...)
end)

if S2 ~= true then
    game:Shutdown()
    return;
end

local secure_call = exploit == "Synapse" and syn.secure_call or newcclosure(function(Function, Script, ...) --// Tried making it not synapse only - not sure if this works as intended
    local ScriptEnvironment = getsenv(Script)
    local OldEnvironment = getfenv(0)
    setfenv(0, ScriptEnvironment)
    Function(...)
    setfenv(0, OldEnvironment)
end)

local HidingSpots = {
    CFrame.new(465.146, -5.709, 1035.712);
    CFrame.new(-1320, 24.625, 491);
    CFrame.new(174.365, -10.122, 337.608);
    CFrame.new(-374, 13.5, 542.766);
    CFrame.new(-420, 13.5, 330.766);
    CFrame.new(-327, 13.5, 299.766);
    CFrame.new(-310, 13.5, 156.766);
    CFrame.new(-296, 13.5, 483.766);
    CFrame.new(239, 6.7, -1780.497);
    CFrame.new(1336, 17.016, -444);
    CFrame.new(770, 20.316, -119);
    CFrame.new(745, 20.316, -114);
    CFrame.new(-727.5, 13.5, -28.734);
    CFrame.new(-727.5, 13.5, -95.734);
    CFrame.new(-777.5, 13.5, -67.734);
}
local Settings = {}
local Client = {}
local Core = {
    StaminaHook = function() end
}
local Utils = {}
local Robbery = {}
Robbery.Cooldowns = {
    ["House"] = 360;
    ["ATM"] = 360;
    ["Jewelry"] = 360;
}
Robbery.CooldownTimes = {
    ["House"] = 360;
    ["ATM"] = 360;
    ["Jewelry"] = 360;
}
Core.Toggle = {}
Core.GunSettings = {}
Core.TLDetections = {}
Settings.ESP = {}
getgenv()["TSLoaded"] = true

local UserInputService = game:GetService("UserInputService")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/AbstractPoo/Main/main/Library"))()
local ESP_Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/HAXERINO/this-stuff-scripts/main/ThisStuff-ESP.txt"))()
local Window = library:Create{
    Theme = "Dark",
    Size = UDim2.new(0, 555, 0, 400)
}
local LocalCheats = Window:Tab({Name = "Local Cheats"}):Divider({Name = ""})
local CharacterCheats = Window:Tab({Name = "Character Cheats"}):Divider({Name = ""})
local Teleports = Window:Tab({Name = "Teleports"}):Divider({Name = ""})
local VehicleCheats = Window:Tab({Name = "Vehicle Cheats"}):Divider({Name = ""})
local AutoRobTab = Window:Tab({Name = "Auto Rob"}):Divider({Name = ""})
local ESP_Window = Window:Tab({Name = "Esp"}):Divider({Name = ""})
local SettingsT = Window:Tab({Name = "Settings"}):Divider({Name = ""})
local MenuFunctions = require(LocalPlayer.PlayerGui.GameMenus.MenuFunctions)

wait(0.2)

local charset = {}
for i = 48,  57 do table.insert(charset, string.char(i)) end
for i = 65,  90 do table.insert(charset, string.char(i)) end
for i = 97, 122 do table.insert(charset, string.char(i)) end

local JewelryFloor;

do
    local function NewPart(Size, Position)
        local Part = Instance.new("Part")
        Part.Parent = workspace
        Part.Anchored = true
        Part.Size = Size
        Part.Position = Position
        return Part
    end
    JewelryFloor = NewPart(Vector3.new(48, 3, 57), Vector3.new(-464, 15.55, -436.4))
    NewPart(Vector3.new(176, 1, 428), Vector3.new(-348, 9.5, 341.766))
    NewPart(Vector3.new(123, 1, 165), Vector3.new(-758.5, 9.5, -48.734))
end
    
function RandomCharacters(length)
    return length > 0 and RandomCharacters(length - 1) .. charset[Random.new():NextInteger(1, #charset)] or ""
end

local Success, Response = pcall(function()
	return HttpService:JSONDecode(readfile("ThisStuff_2534724415.json"))
end)

if Success and type(Response) == "table" then
    for i, v in pairs(Response) do
        if i ~= "Settings" then
            Settings[i] = v
        end
	end
end

Settings.AutoRob = false

local Givetring = getfenv(getrenv()._G.PushNotification).string
setreadonly(Givetring, false)
Givetring.match = function()
    return;
end
setreadonly(Givetring, true)

--[[
    Start of Script
]]
Client.Ambient = Lighting.Ambient
function UpdatePlayer(Player, LastLocation)
    if not Settings.Radar or Player == LocalPlayer then
        return;
    end
    ReplicatedStorage.ClientBinds.SetMapMarker:Fire(Player.Name.."_PlayerLocation", LastLocation.Value, true, "PlayerLocation", false, Player.Team.TeamColor.Color, Player.Name, true)
end

function Connect(Player)
    pcall(function()
        if Player == LocalPlayer then
            return;
        end

        local LastLocation = Player:WaitForChild("LastLocation")
        UpdatePlayer(Player, LastLocation)
        LastLocation:GetPropertyChangedSignal("Value"):Connect(function()
            UpdatePlayer(Player, LastLocation)
        end)
    end)
end

function Core.Stamina(Ammount)
    LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina.Value = Ammount
    LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].UpdateStamina:Fire()
end

ESP_Library.Overrides.GetColor = function(Character)
    local Player = Players:GetPlayerFromCharacter(Character)
    if Player and Player.TeamColor then
        return Settings.ESP.Team and Color3.fromRGB(Player.TeamColor.Color.R*255, Player.TeamColor.Color.G*255, Player.TeamColor.Color.B*255) or (Settings.ESP.Color or Color3.fromRGB(255, 255, 255))
    end
    return Settings.ESP.Color or Color3.fromRGB(255, 255, 255)
end

local function CharAdded(Player)
    ESP_Library:Add(Player.Character, {
        Name = Player.Name,
        Player = Player,
        PrimaryPart = Player.Character.PrimaryPart or Player.Character:WaitForChild("HumanoidRootPart", 20)
    })
end

function Client.ESP()
    ESP_Library:Toggle(Settings.ESP.Enabled or false)
    ESP_Library.Boxes = Settings.ESP.Boxes or false
    ESP_Library.Tracers = Settings.ESP.Tracers or false
    if not Settings.ESP.Team then
        ESP_Library.Color = Settings.ESP.Color or Color3.fromRGB(255, 255, 255)
    end
    ESP_Library.Names = Settings.ESP.Names or false
    ESP_Library.Team = Settings.ESP.Team or false
    ESP_Library.TeamMates = Settings.ESP.TeamMates or false
end


function Utils.GetCharacter(Player)
    assert(typeof(Player) == "Instance", "Utils.GetCharacter :: Parsed value is invalid")
    assert(Player:IsA("Player"), "Utils.GetCharacter :: Parsed value is invalid")

    if Player.Character ~= nil and Player.Character:FindFirstChild("Humanoid") then
        return Player.Character
    end

    return false
end

function Utils.FindTable(Table, Name)
    assert(type(Table) == "table", "Utils.FindTable :: Parsed 'Table' value is invalid")
    assert(typeof(Name) == "string", "Utils.FindTable :: Parsed 'Name' value is invalid")

    for i,v in next, Table do
        if v.Name == Name or i == Name then
            return v
        end
    end
end

function Utils.GetPlayer(PlayerName)
    assert(typeof(PlayerName) == "string", "Utils.GetPlayer :: Parsed value is invalid")
    local Player;
    local PlayersT = Players:GetPlayers()
    for i = 1, #PlayersT do
        if string.lower(string.sub(PlayersT[i].Name, 1, string.len(PlayerName))) == string.lower(PlayerName) then
            Player = PlayersT[i]
            break
        end
    end
    return Player
end

function Utils.GetClosest()
    local Nearest;
    local Closest = 9e15

    for i,v in pairs(Players:GetPlayers()) do
        if Utils.GetCharacter(v) and (v.Team.Name == "Criminals" or v.Team.Name == "Villans") then
            local Distance = Utils.GetDistance(v.Character.HumanoidRootPart.Position)
            if Distance < Closest then
                Nearest = v
            end
        end
    end
    return Nearest
end

function Utils.Equip(Item)
    assert(typeof(Item) == "string", "Utils.Equip :: Parsed value is invalid")
    if not Utils.GetCharacter(LocalPlayer) then
        return false
    end
    if LocalPlayer.Backpack:FindFirstChild(Item) then
        LocalPlayer.Character.Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild(Item))
    end
end

function Utils.RepairWheel(Wheel)
    assert(typeof(Wheel) == "Instance", "Utils.RepairWheel :: Parsed value is invalid")
    local Request = ReplicatedStorage.FE.ChangeTire:InvokeServer(Wheel)
    if Request == "Success" then
        MenuFunctions.ShowMessage("Success", "Tire successfully changed!")
    else
        MenuFunctions.ShowMessage("Error", Request or "[NULL]")
    end
    return Request
end

function Utils.RepairLights(Lights)
    assert(typeof(Lights) == "Instance", "Utils.RepairLights :: Parsed value is invalid")
    local Request = ReplicatedStorage.FE.FixTrafficLight:InvokeServer(Lights)
    if Request == "Success" then
        MenuFunctions.ShowMessage("Success", "Traffic light successfully repaired!")
    else
        MenuFunctions.ShowMessage("Error", Request or "[NULL]")
    end
    return Request
end

function Utils.ReSeat()
    spawn(function()
        if not Utils.GetCharacter(LocalPlayer) or LocalPlayer.Character:FindFirstChild("Humanoid").Sit == false then
            return
        end
        local Seat = LocalPlayer.Character:FindFirstChild("Humanoid").SeatPart
        ReplicatedStorage.FE.VehicleExit:FireServer(Seat)
        game:GetService("RunService").RenderStepped:Wait()
        wait(0.25)
        game:GetService("RunService").RenderStepped:Wait()
        ReplicatedStorage.FE.VehicleSit:FireServer(Seat)
    end)
end

function FireButton(button)
    for i,v in next, getconnections(button.MouseButton1Click) do
        v:Fire()
    end
    for i,v in next, getconnections(button.MouseButton1Down) do
        v:Fire()
    end
    for i,v in next, getconnections(button.Activated) do
        v:Fire()
    end
end

local function UpdateGuns()
    for i,v in next, game:GetService("Players").LocalPlayer.Backpack:GetChildren() do
        if v:FindFirstChild("GunSettings") then
            local GunSettings = require(v.GunSettings)

            if not table.find(Core.GunSettings, gethiddenproperty(v.GunSettings, "ScriptGuid")) then
                Core.GunSettings[gethiddenproperty(v.GunSettings, "ScriptGuid")] = GunSettings
            end

            local OldGunSettings = Core.GunSettings[gethiddenproperty(v.GunSettings, "ScriptGuid")]
            
            GunSettings.Recoil = Settings.NoRecoil and 0 or OldGunSettings.Recoil
            GunSettings.AimSpeed = Settings.InstantAim and 0 or OldGunSettings.AimSpeed
            GunSettings.ReloadTime = Settings.InstantReload and 0 or OldGunSettings.ReloadTime
            GunSettings.Accuracy = Settings.NoSpread and 0 or OldGunSettings.Accuracy
        end
    end
end

local function GetHidingPosition()
    local HidingSpot = Random.new():NextInteger(1, #HidingSpots)

    return HidingSpots[HidingSpot] + Vector3.new(Random.new():NextNumber(0, 5), 0, Random.new():NextNumber(0, 5))
end

function get_target() -- thanks unrealskill for making this function (https://v3rmillion.net/showthread.php?tid=620391)
    local Node = CFrame.new(Mouse.UnitRay.Origin)
    local Hits = { }
    while Node do
        local ray = Mouse.UnitRay
        ray = Ray.new(ray.Origin, ray.Direction * 10000)
        local Hit, Position = workspace:FindPartOnRayWithIgnoreList(ray, {
            LocalPlayer.Character,
            unpack(Hits)
        })
        if pcall(function() local a = Hit.Transparency end) and Hit.Transparency == 0 then
            return #Hits == 0 and Mouse.Hit or CFrame.new(Position)
        end
        if Hit then
            Hits[#Hits + 1] = Hit
            Node = CFrame.new(Position) * (Node - Node.p)
        else
            return CFrame.new(Position)
        end
    end
end

function getAreaOfTriangle(a, b, c)
	return math.abs(a.X * (b.X - c.Y) + b.X * (c.Y - a.Y) + c.X * (a.Y + b.Y))/2
end

function createFrameCollider(frame) --// From DevForum
	local frame_absoluteSize = frame.AbsoluteSize
	local frame_absolutePosition = frame.AbsolutePosition
	local frame_rotation = frame.Rotation
	local frame_height = frame_absoluteSize.Y
	local frame_width = frame_absoluteSize.X
	local frame_area = frame_width*frame_height
	local frame_center = frame_absolutePosition + frame_absoluteSize/2
    local frame_theta = (-frame_rotation)%180
    
	frame_theta = frame_theta < 0 and 180 - math.abs(frame_theta) or frame_theta
	
	if frame_theta >= 90 then
		frame_height = frame_width
		frame_width = frame_absoluteSize.Y
		frame_theta = frame_theta - 90
	end

	local frame_theta_rad = math.rad(frame_theta)
	local shift_y = math.sin(frame_theta_rad)*frame_width/2
	local shift_x = math.cos(frame_theta_rad)*frame_width/2
	local offset_y = math.cos(frame_theta_rad)*frame_height/2
	local offset_x = math.sin(frame_theta_rad)*frame_height/2
	local edge_rightX = frame_center.X - shift_x
	local edge_rightY = frame_center.Y + shift_y
	local edge_leftX = frame_center.X + shift_x
	local edge_leftY = frame_center.Y - shift_y
	local a = Vector2.new(edge_leftX - offset_x, edge_leftY - offset_y)
	local b = Vector2.new(edge_rightX - offset_x, edge_rightY - offset_y)
	local c = Vector2.new(edge_rightX + offset_x, edge_rightY + offset_y)
	local d = Vector2.new(edge_leftX + offset_x, edge_leftY + offset_y)
	local corners = {a,b,c,d}
	
	return function(guiObject)
		local obj_pos = guiObject.AbsolutePosition
		local obj_size = guiObject.AbsoluteSize
		local size_x = obj_size.X
		local size_y = obj_size.Y
		local a = obj_pos
		local b = obj_pos + Vector2.new(size_x,0)
		local c = obj_pos + Vector2.new(size_x,size_y)
		local d = obj_pos + Vector2.new(0,size_y)
        local corners2 = {a,b,c,d}
        local Return
		
		for _, points in ipairs({corners, corners2}) do
			for i = 1, 4 do
				local j = i%4+1
				local p1 = points[i]
				local p2 = points[j]
				
				local normal = Vector2.new(p2.Y - p1.Y, p1.X - p2.X)
				local minA, maxA, minB, maxB
				
				for _, p in pairs(corners) do
					local projected = normal.X * p.X + normal.Y * p.Y
					minA = (minA == nil and projected) or (projected < minA and projected) or minA
					maxA = (maxA == nil and projected) or (projected > maxA and projected) or maxA
				end
				
				for _, p in pairs(corners2) do
					local projected = normal.X * p.X + normal.Y * p.Y
					minB = (minB == nil and projected) or (projected < minB and projected) or minB
					maxB = (maxB == nil and projected) or (projected > maxB and projected) or maxB
				end
				
				if maxA < minB or maxB < minA then
					return false
                end
                Return = maxA - maxB
			end
		end
		
		return true, Return
	end
end

function DOT()
    if Core.DOTConnection then
        Core.DOTConnection:Disconnect()
    end
    
    LocalPlayer.PlayerGui:WaitForChild("GameMenus")

    for i,v in pairs(getconnections(LocalPlayer.PlayerGui.GameMenus.DOT.OpenEvent.Event)) do
        v:Disable()
        wait()
        Core.DOTEVENT = v
    end
    Core.DOTConnection = LocalPlayer.PlayerGui.GameMenus.DOT.OpenEvent.Event:Connect(function(Object, Type, ...)
        if Settings.InstantChangeTire == true and Type == "ChangeTire" then
            wait(0.5)
            Utils.RepairWheel(Object)
        elseif Settings.InstantFixLights == true and Type == "FixTrafficLight" then
            wait(0.5)
            Utils.RepairLights(Object)
        else
            Core.DOTEVENT:Fire(Object, Type, ...)
        end
    end)
end

function GetVehicle()
    local Vehicle;
    for i,v in next, game:GetService("Workspace").Vehicles:GetChildren() do
        if v["Control_Values"].Owner.Value == LocalPlayer.Name then
            Vehicle = v
        end
    end
    return Vehicle
end

function ArrestAll()
    if not ReplicatedStorage.UnitList:FindFirstChild(LocalPlayer.Name) then
        ReplicatedStorage.FE.CanChangeTeam:InvokeServer(BrickColor.new("Medium Blue"))
        local function GetCallsign()
            local Callsign = Random.new():NextInterger(100, 9999)
            local Response = ReplicatedStorage.FE.CheckCallsign:InvokeServer(Callsign)
            if Response ~= "Good" then
                return GetCallsign()
            end
            
            return Callsign
        end
        ReplicatedStorage.FE.TeamChange:InvokeServer(BrickColor.new("Medium Blue"), GetCallsign())
    end

    local OldCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame

    for i,v in next, Players:GetPlayers() do
        if not v:FindFirstChild("Is_Wanted") then
            continue;
        end

        local Finished = false
        
        coroutine.wrap(function()
            repeat
                RunService.RenderStepped:Wait()
                if LocalPlayer.Character and v.Character then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = v.Character.HumanoidRootPart.CFrame
                end
            until Finished == true
        end)()
        
        if LocalPlayer.Backpack:FindFirstChild("Handcuffs") then
            LocalPlayer.Character.Humanoid:EquipTool(LocalPlayer.Backpack.Handcuffs)
        end
        
        if v.Character.Humanoid.SeatPart then
            ReplicatedStorage.FE.Eject:FireServer(v.Character, v.Character.Humanoid.SeatPart.Parent)
            wait(0.5)
        end
        ReplicatedStorage.FE.Handcuffs:InvokeServer("Handcuff", v)
        wait(0.4)
        ReplicatedStorage.FE.Handcuffs:InvokeServer("Arrest", v)
        wait(0.3)
        Finished = true
        wait(0.2)
    end

    LocalPlayer.Character.HumanoidRootPart.CFrame = OldCFrame
end

local Lockpick = {
    Line = 1,
    LPC = 0,
    NoLP = false,
    collisionDetector = createFrameCollider(LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick.RedLine),
    Disabled = false,
    LastDisabled = 0
}
local Jewelry = {
    collisionDetector = createFrameCollider(LocalPlayer.PlayerGui.GameMenus.RobJewelry.Drill.goodzone)
}

Client.Notification = function(...)
    secure_call(getrenv()._G.PushNotification, LocalPlayer.PlayerScripts["House Teleport"], ...)
end

Client.OCStore = function(...)
    local Arguments = {...}
    if Arguments[1] == "Hardware" then
        if Arguments[2] == "Open" then
            LocalPlayer.PlayerGui.GameMenus.HardwareStore.OpenEvent:Fire()
        elseif Arguments[2] == "Close" then
            FireButton(LocalPlayer.PlayerGui.GameMenus.HardwareStore.Close)
        end
    elseif Arguments[1] == "Gun" then
        if Arguments[2] == "Open" then
            LocalPlayer.PlayerGui.GameMenus.WeaponStore.OpenEvent:Fire()
        elseif Arguments[2] == "Close" then
            FireButton(LocalPlayer.PlayerGui.GameMenus.WeaponStore.Close)
        end
    end
end

if not Settings.WalkSpeed then
    Settings.WalkSpeed = 16
end

if not Settings.JumpPower then
    Settings.JumpPower = 50
end

Core.Toggle["Full Bright"] = LocalCheats:Toggle({Name = "Full Bright", State = Settings.FullBright or false, Callback = function(Value)
    Settings.FullBright = Value
end})

Core.Toggle["Auto ATM"] = LocalCheats:Toggle({Name = "Auto Complete ATM", State = Settings.AutoComplete_ATM or false, Callback = function(Value)
    Settings.AutoComplete_ATM = Value
end})

Core.Toggle["Auto Lockpick"] = LocalCheats:Toggle({Name = "Auto Complete Lockpick", State = Settings.AutoPick or false, Callback = function(Value)
    Lockpick.Line = 1
    Settings.AutoPick = Value
end})

Core.Toggle["Auto Safe"] = LocalCheats:Toggle({Name = "Auto Complete Safe", State = Settings.AutoCompleteSafe or false, Callback = function(Value)
    Settings.AutoCompleteSafe = Value
end})

Core.Toggle["Auto Drill"] = LocalCheats:Toggle({Name = "Auto Complete Drill", State = Settings.AutoDrill or false, Callback = function(Value)
    Settings.AutoDrill = Value
end})

Core.Toggle["Instant Change Tire"] = LocalCheats:Toggle({Name = "Instant Change Tire", State = Settings.InstantChangeTire or false, Callback = function(Value)
    Settings.InstantChangeTire = Value
end})

Core.Toggle["Instant Fix Lights"] = LocalCheats:Toggle({Name = "Instant Fix Lights", State = Settings.InstantFixLights or false, Callback = function(Value)
    Settings.InstantFixLights = Value
end})

Core.Toggle["No Recoil"] = LocalCheats:Toggle({Name = "No Recoil", State = Settings.NoRecoil or false, Callback = function(Value)
    Settings.NoRecoil = Value
    
    UpdateGuns()
end})

Core.Toggle["Instant Aim"] = LocalCheats:Toggle({Name = "Instant Aim", State = Settings.InstantAim or false, Callback = function(Value)
    Settings.InstantAim = Value
    
    UpdateGuns()
end})

Core.Toggle["Instant Reload"] = LocalCheats:Toggle({Name = "Instant Reload", State = Settings.InstantReload or false, Callback = function(Value)
    Settings.InstantReload = Value
    
    UpdateGuns()
end})

Core.Toggle["No Spread"] = LocalCheats:Toggle({Name = "No Spread", State = Settings.NoSpread or false, Callback = function(Value)
    Settings.NoSpread = Value
    
    UpdateGuns()
end})

Core.Toggle["AntiAFK"] = LocalCheats:Toggle({Name = "Anti AFK", State = Settings.AntiAFK or false, Callback = function(Value)
    Settings.AntiAFK = Value
end})

Core.Toggle["AntiHelicopter"] = LocalCheats:Toggle({Name = "Anti Helicopter", State = Settings.AntiHelicopter or false, Callback = function(Value)
    Settings.AntiHelicopter = Value
end})

Core.Toggle["Radar"] = LocalCheats:Toggle({Name = "Player Radar", State = Settings.Radar or false, Callback = function(Value)
    Settings.Radar = Value
end})

LocalCheats:Button({Name = "Arrest All", Callback = ArrestAll})

Core.Toggle["Click TP"] = CharacterCheats:Toggle({Name = "Click TP", State = Settings.ClickTP or false, Callback = function(Value)
    Settings.ClickTP = Value
end})

Core.Toggle["Infinite Stamina"] = CharacterCheats:Toggle({Name = "Infinite Stamina", State = Settings.InfiniteStamina or false, Callback = function(Value)
    Settings.InfiniteStamina = Value
    if Value then
        Core["StaminaHook"] = LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina:GetPropertyChangedSignal("Value"):Connect(function()
            if LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina.Value ~= 100 then
                LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina.Value = 100
            end
        end)
        Core.Stamina(100)
    elseif Core["StaminaHook"] then
        Core["StaminaHook"]:Disconnect()
    end
end})

CharacterCheats:Box({Name = "WalkSpeed", ClearText = false, Callback = function(Value)
    Settings.WalkSpeed = tonumber(Value)
end})

CharacterCheats:Box({Name = "JumpPower", ClearText = false, Callback = function(Value)
    Settings.JumpPower = tonumber(Value)
end})

Core.Toggle["Speed Cheats"] = CharacterCheats:Toggle({Name = "Speed Cheats", State = Settings.SpeedCheats or false, Callback = function(Value)
    Settings.SpeedCheats = Value
    if Value ~= true then
        LocalPlayer.Character.Humanoid.WalkSpeed = 16
        LocalPlayer.Character.Humanoid.JumpPower = 50
    elseif not Core["WalkSpeedHook"] then
        LocalPlayer.Character.Humanoid.WalkSpeed = Settings.WalkSpeed
        LocalPlayer.Character.Humanoid.JumpPower = Settings.JumpPower
    end
end})

Client.LocationName = {"Waterfall", "Family Jewels", "Park", "Hideout", "Sheriff's Office", "Gas Station", "Vine/Lee Street", "Prison", "Barn", "Highway Base", "Police Station", "Hospital/Shopping", "Spawn", "Fire Department", "Trap Door", "Suburb 1/S", "Suburb 1/N", "Parking Garage"}
Client.StoreName = {"Tool Store", "Gun Shop"}
Client.AtmName = {"ATM - Powerplant", "ATM - Police", "ATM - Parking Garage", "ATM - Sandstone RD", "ATM - Jewelry Store", "ATM - Back Alley"}
Client.Locations = {
    {Name = "Park", CFrame = CFrame.new(-42, 25.5, 125)},
    {Name = "Tool Store", CFrame = CFrame.new(-445.469, 25.748, -725.23)},
    {Name = "Sheriff's Office", CFrame = CFrame.new(-811.273, 24.564, -734.794)},
    {Name = "Vine/Lee Street", CFrame = CFrame.new(1153.729, 4.2, -990.147)},
    {Name = "Prison", CFrame = CFrame.new(1339.721, 3.388, -339.662)},
    {Name = "Barn", CFrame = CFrame.new(820.018, 3.128, -1111.422)},
    {Name = "Highway Base", CFrame = CFrame.new(1086.582, 3.698, 126.127)},
    {Name = "Police Station", CFrame = CFrame.new(709.943, 4.2, -145.204)},
    {Name = "Hospital/Shopping", CFrame = CFrame.new(-213.83, 23.241, -447.743)},
    {Name = "Spawn", CFrame = CFrame.new(-481.569, 23.948, 701.996)},
    {Name = "Fire Department", CFrame = CFrame.new(-992.167, 23.748, 51.318)},
    {Name = "Gas Station", CFrame = CFrame.new(683.253, 4.2, -1532.65)},
    {Name = "Waterfall", CFrame = CFrame.new(411, -7.5, 824)},
    {Name = "Gun Shop", CFrame = CFrame.new(-1249.954, 23.748, -197.149)},
    {Name = "Trap Door", CFrame = CFrame.new(-1358.151, 0.715, -1233.165)},
    {Name = "Suburb 1/S", CFrame = CFrame.new(-676.6, -9.238, -1518.6)},
    {Name = "Parking Garage", CFrame = CFrame.new(-334.47, 23.748, 283.728)},
    {Name = "Suburb 1/N", CFrame = CFrame.new(-184.233, -9.268, -1560.8)},
    {Name = "Family Jewels", CFrame = CFrame.new(-464, 25.25, -409)},
    {Name = "ATM - Powerplant", CFrame = CFrame.new(808.207, 4.446, 376.697)},
    {Name = "ATM - Police", CFrame = CFrame.new(1007.8, 4, -23.4)},
    {Name = "ATM - Parking Garage", CFrame = CFrame.new(-372.339, 23.748, 147.836)},
    {Name = "ATM - Sandstone RD", CFrame = CFrame.new(-863.892, 24.496, 420.545)},
    {Name = "ATM - Jewelry Store", CFrame = CFrame.new(-585.065, 24.496, -405.526)},
    {Name = "ATM - Back Alley", CFrame = CFrame.new(-470.591, 24.496, 387.245)},
    {Name = "Tool Store Inside", CFrame = CFrame.new(-437.03, 25.748, -710)},
    {Name = "Hideout", CFrame = CFrame.new(857, 4.5, 832)}
}

table.sort(Client.LocationName, function(a, b) return a < b end)
table.sort(Client.StoreName, function(a, b) return a < b end)
table.sort(Client.AtmName, function(a, b) return a < b end)

Client.TP = function(cframe)
    if cframe and typeof(cframe) == "CFrame" then
        local oldws = LocalPlayer.Character.Humanoid.WalkSpeed
        LocalPlayer.Character.Humanoid.WalkSpeed = 0
        Client.TP(LocalPlayer.Character)
        LocalPlayer.Character:SetPrimaryPartCFrame(cframe)
        LocalPlayer.Character.Humanoid.WalkSpeed = oldws
    end
end

local function Teleport(CFrame, Callback, NoAnchor)
    if not CFrame or not Callback then
        return false;
    end

    if NoAnchor ~= false then
        LocalPlayer.Character.HumanoidRootPart.Anchored = true
    end
    local OldCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame
    wait()
    Callback()
    wait()
    LocalPlayer.Character.HumanoidRootPart.CFrame = OldCFrame
    if NoAnchor ~= false then
        LocalPlayer.Character.HumanoidRootPart.Anchored = false
    end
end

Teleports:Box({Name = "Tp to player", ClearText = true, Callback = function(Value)
    local Player = Utils.GetPlayer(Value)
    local Character = Utils.GetCharacter(Player)
    if Player and Utils.GetCharacter(Player) then
        Client.TP(Character.HumanoidRootPart.CFrame)
    end
end})

Teleports:SearchDropdown({Name = "Locations", Options = Client.LocationName, Callback = function(Value)
    local LocationData = Utils.FindTable(Client.Locations, Value)
    Client.TP(LocationData.CFrame)
end})

Teleports:SearchDropdown({Name = "Stores", Options = Client.StoreName, Callback = function(Value)
    local LocationData = Utils.FindTable(Client.Locations, Value)
    Client.TP(LocationData.CFrame)
end})

Teleports:SearchDropdown({Name = "Atms", Options = Client.AtmName, Callback = function(Value)
    local LocationData = Utils.FindTable(Client.Locations, Value)
    Client.TP(LocationData.CFrame)
end})

--//

Core.Toggle["AutoRobEnabled"] = AutoRobTab:Toggle({Name = "Auto Rob Enabled", State = false, Callback = function(Value)
    Settings.AutoRob = Value
    Core.Robbing = false
end})

Core.Toggle["AutoRobHouse"] = AutoRobTab:Toggle({Name = "Auto Rob House", State = Settings.AutoRobHouse or false, Callback = function(Value)
    Settings.AutoRobHouse = Value
end})

Core.Toggle["AutoRobATMs"] = AutoRobTab:Toggle({Name = "Auto Rob ATMs", State = Settings.AutoRobATMs or false, Callback = function(Value)
    Settings.AutoRobATMs = Value
end})

Core.Toggle["AutoRobJewelry"] = AutoRobTab:Toggle({Name = "Auto Rob Jewelry", State = Settings.AutoRobJewelry, Callback = function(Value)
    Settings.AutoRobJewelry = Value
end})

--//

Core.Toggle["ESP_Enabled"] = ESP_Window:Toggle({Name = "ESP", State = Settings.ESP.Enabled or false, Callback = function(Value)
    Settings.ESP.Enabled = Value
    Client.ESP()
end})

Core.Toggle["ESP_Boxes"] = ESP_Window:Toggle({Name = "Toggle Boxes", State = Settings.ESP.Boxes or false, Callback = function(Value)
    Settings.ESP.Boxes = Value
    Client.ESP()
end})

Core.Toggle["ESP_Tracers"] = ESP_Window:Toggle({Name = "Toggle Tracers", State = Settings.ESP.Tracers or false, Callback = function(Value)
    Settings.ESP.Tracers = Value
    Client.ESP()
end})

Core.Toggle["ESP_TeamMates"] = ESP_Window:Toggle({Name = "Show TeamMates", State = Settings.ESP.TeamMates or false, Callback = function(Value)
    Settings.ESP.TeamMates = Value
    Client.ESP()
end})

--[[ESP_Window:AddColorPicker("ESP Color", Color3.fromRGB(255, 255, 255), function(Value)
    Settings.ESP.Color = Value
    Client.ESP()
end)]] --// Keep commented out?

Core.Toggle["ESP_Team"] = ESP_Window:Toggle({Name = "Use Team Color", State = Settings.ESP.Team or false, Callback = function(Value)
    Settings.ESP.Team = Value
    Client.ESP()
end})

Core.Toggle["ESP_Name"] = ESP_Window:Toggle({Name = "Show Name", State = Settings.ESP.Names or false, Callback = function(Value)
    Settings.ESP.Names = Value
    Client.ESP()
end})

VehicleCheats:Box({Name = "Vehicle Horsepower", ClearText = false, Callback = function(Value)
    local Vehicle = GetVehicle()
    if not Vehicle then
        return;
    end

    local Drive = require(Vehicle["Drive Controller"])
    Drive.Horsepower = Value

    game:GetService("RunService").RenderStepped:Wait()
    Utils.ReSeat()
end})

VehicleCheats:Box({Name = "Vehicle Max Speed (Lower = Faster)", ClearText = false, Callback = function(Value)
    local Vehicle = GetVehicle()
    if not Vehicle then
        return;
    end

    local Drive = require(Vehicle["Drive Controller"])
    Drive.FinalDrive = Value

    game:GetService("RunService").RenderStepped:Wait()
    Utils.ReSeat()
end})

VehicleCheats:Button({Name = "Mod Vehicle (Preset Values)", Callback = function()
    local Vehicle = GetVehicle()
    if not Vehicle then
        return;
    end

    local Drive = require(Vehicle["Drive Controller"])
    Drive.Horsepower = 3000
    Drive.FinalDrive = 1
    Drive.RevAccel = 1745
    Drive.FAntiRoll = 800
    Drive.CanDrift = true
    Drive.RBrakeForce = 10000
    Drive.FBrakeForce = 15000
    Drive.PBrakeFrce = 7000
    Drive.SteerDecay = 600

    game:GetService("RunService").RenderStepped:Wait()
    Utils.ReSeat()

    Client.Notification("Grey", "Modded your vehicle")
end})

Core.Toggle["Disable Detections"] = VehicleCheats:Toggle({Name = "Disable Detections", State = Settings.DisableDetections or false, Callback = function(Value)
    Settings.DisableDetections = Value
    if Settings.DisableDetections then
        for i,v in next, game:GetService("Workspace")["Traffic Lights"]:GetChildren() do
            if v:FindFirstChild("Detection") then
                Core.TLDetections[#Core.TLDetections + 1] = {Object = v.Detection, Parent = v}
                v.Detection.Parent = nil
            end
        end
        Core.TLDetections["SpeedTraps"] = workspace.TrafficDetections.SpeedTraps
        workspace.TrafficDetections.SpeedTraps.Parent = nil
        Core.TLDetections["EvasionDetections"] = workspace.TrafficDetections.EvasionDetections
        workspace.TrafficDetections.EvasionDetections.Parent = nil
    else
        for i,v in next, Core.TLDetections do
            if type(v) == "table" then
                v.Object.Parent = v.Parent
            else
                v.Parent = workspace.TrafficDetections
                v.Parent = workspace.TrafficDetections
            end
        end
    end
end})

SettingsT:Button({Name = "Copy Discord Invite", Callback = function()
    setclipboard(game:HttpGet("https://thisstuff.xyz/rawdiscord.txt"))
end})

SettingsT:Button({Name = "Disable All", Callback = function()
    for i,v in next, Core.Toggle do
        v:SetState(false)
    end
end})

spawn(function()
    while wait(10) do
        writefile("ThisStuff_2534724415.json", HttpService:JSONEncode(Settings))
    end
end)

UserInputService.InputBegan:Connect(function(Input, GPE)
    if Utils.GetCharacter(LocalPlayer) and not GPE and Input.UserInputType == Enum.UserInputType.MouseButton1 and Settings.ClickTP then
        local Target = get_target()
        if Target then
            Client.TP(Target + Vector3.new(0, 5, 0))
        end
    end
end)

--

function Robbery.House(Overwrite)
    if Core.Robbing and not Overwrite then
        return;
    end

    local OldAutoPick = Core.Toggle["Auto Lockpick"]:GetState()
    local OldAutoSafe = Core.Toggle["Auto Safe"]:GetState()
    Core.Toggle["Auto Lockpick"]:SetState(true)
    Core.Toggle["Auto Safe"]:SetState(true)
    Core.Robbing = true
    local Math = math.random(1, #game:GetService("Workspace").Houses:GetChildren())
    local House = game:GetService("Workspace").Houses[Math]
    local Response;

    local function Reset()
        Robbery.Cooldowns.House = tick()
        Core.Robbing = false
    end

    function Check()
        if House.Owner.Value ~= nil then
            Math = math.random(1, #game:GetService("Workspace").Houses:GetChildren())
            House = game:GetService("Workspace").Houses[Math]
            Check()
        end
    end

    if not LocalPlayer.Backpack:FindFirstChild("Lockpick") then
        Teleport(Utils.FindTable(Client.Locations, "Tool Store Inside").CFrame, function()
            wait(0.2)
            Response = ReplicatedStorage.FE.BuyGear:InvokeServer("Lockpick")

            wait(0.2)

            if not LocalPlayer.Backpack:FindFirstChild("Lockpick") or Response ~= "Good" then
                Client.TP(GetHidingPosition())
                Core.Robbing = false
            end
        end, false)
    end
    
    wait(0.75)

    if not Core.Robbing then
        return;
    end

    if not House:FindFirstChild("DoorHandle") then
        repeat
            wait(0.1)
            Client.TP(CFrame.new(House["MarkerPosition"].Value))
        until House:FindFirstChild("DoorHandle")
    end

    Client.TP(House["DoorHandle"].CFrame)

    wait(5) --// What's the matter with the checks

    Utils.Equip("Lockpick")
    Client.TP(House["DoorHandle"].CFrame)
    wait(4)

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    ReplicatedStorage.Houses.EnterHouse:FireServer(House.Name)

    wait(2)

    repeat
        wait(0.2)
        if LocalPlayer.PlayerGui.GameMenus.Lockpick.Visible == false and Lockpick.Line < 6 then
            Robbery.House(true)
        end
    until Lockpick.Line > 6 or Core.AntiHelicopter
    wait(0.5)

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    repeat
        wait(0.1)
    until workspace.HouseRobbery:FindFirstChild(LocalPlayer.Name)

    repeat
        wait(0.1)
    until #workspace.HouseRobbery[LocalPlayer.Name]:GetChildren() > 0
    wait(1)

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    local DoorCFrame = LocalPlayer.Character.HumanoidRootPart.CFrame

    for i,v in next, workspace.HouseRobbery[LocalPlayer.Name]:GetChildren() do
        if v.Name == "Bill" then
            LocalPlayer.Character.Humanoid.Jump = true
            wait(0.5)
            Teleport(v.CFrame + Vector3.new(0, 4, 0), function() wait(0.4) ReplicatedStorage.Houses.StealItem:FireServer(v) wait(0.2) end, false)
        elseif v.Name == "Safe" then
            local Part = v:FindFirstChild("MainSafe", true) or v.PrimaryPart

            if not Part then
                continue;
            end

            Client.TP(Part.CFrame + Vector3.new(0, 2, 0))
            wait(1)
            ReplicatedStorage.FE.StartHack:InvokeServer("StartHack", Part)
            wait(4)
            repeat
                wait(0.2)
            until LocalPlayer.PlayerGui.GameMenus.Safe.Visible == false or LocalPlayer.PlayerGui.GameMenus.Safe.Position.X.Scale ~= 0.5 or LocalPlayer.PlayerGui.GameMenus.Safe.Position.Y.Scale ~= 0.5
        end
    end

    wait(2)

    Core.Toggle["Auto Lockpick"]:SetState(OldAutoPick)
    Core.Toggle["Auto Safe"]:SetState(OldAutoSafe)

    LocalPlayer.Character.Humanoid.Jump = true

    Client.TP(DoorCFrame)

    wait(0.5)

    ReplicatedStorage.Houses.ExitHouse:FireServer()
    wait(2)
    getrenv()._G.InHouse = false
    LocalPlayer.Character.Humanoid.WalkSpeed = Settings.SpeedCheats and Settings.WalkSpeed or 16
    wait(1.5)
    Client.TP(GetHidingPosition())
    wait(0.5)
    Reset()
end

function Robbery.ATM()
    if Core.Robbing then
        return;
    end

    local OldAutoComplete_ATM = Core.Toggle["Auto ATM"]:GetState()
    Core.Toggle["Auto ATM"]:SetState(true)
    Core.Robbing = true
    local ATM;

    local function Reset()
        Robbery.Cooldowns.ATM = tick()
        Core.Robbing = false
    end

    if not LocalPlayer.Backpack:FindFirstChild("RFID Disruptor") then
        local Response;

        Teleport(Utils.FindTable(Client.Locations, "Tool Store Inside").CFrame, function()
            wait(0.2)
            Response = ReplicatedStorage.FE.BuyGear:InvokeServer("RFID Disruptor")

            wait(0.2)

            if not LocalPlayer.Backpack:FindFirstChild("RFID Disruptor") or Response ~= "Good" then
                Client.TP(GetHidingPosition())
                Core.Robbing = false
            end
        end, false)
    end

    if not Core.Robbing then
        return;
    end

    wait(0.2)

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    Client.TP(Utils.FindTable(Client.Locations, "ATM - Powerplant").CFrame)
    wait(0.5)

    Client.TP(Utils.FindTable(Client.Locations, "ATM - Powerplant").CFrame)
    wait(0.5)

    do
        local ClosestATM = {
            ["Distance"] = 2000
        }
        for i,v in next, workspace.ATMs:GetChildren() do
            if #v:GetChildren() ~= 0 and v:FindFirstChildWhichIsA("Part") then
                local Distance = (v:FindFirstChildWhichIsA("Part").Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if Distance < ClosestATM.Distance then
                    ClosestATM = {
                        ["ATM"] = v;
                        ["Distance"] = Distance;
                    }
                end
            end
        end
        if not ClosestATM["ATM"] then
            Client.TP(GetHidingPosition())
            wait(0.5)
            Core.Robbing = false
            return;
        end
        ATM = ClosestATM["ATM"]
    end

    if Core.Robbing == false or Core.AntiHelicopter then
        Reset()
        return;
    end

    ReplicatedStorage.FE.StartATM:FireServer(ATM)
    local Response2 = ReplicatedStorage.FE.StartHack:InvokeServer("StartHack", ATM)

    wait(0.2)

    if Response2 ~= true and LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.Visible == false then
        Client.TP(GetHidingPosition())
        wait(0.5)
        Robbery.Cooldowns.ATM = tick()
        Core.Robbing = false
        return;
    end

    repeat
        wait()
    until LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.Visible ~= true

    FireButton(LocalPlayer.PlayerGui.GameMenus.ATM.SuccessfulHack.ClickHere)

    Core.Toggle["Auto Lockpick"]:SetState(OldAutoComplete_ATM)

    wait(0.5)
    Client.TP(GetHidingPosition())
    wait(0.5)
    Reset()
end

function Robbery.Jewelry()
    if Core.Robbing then
        return;
    end

    local OldAutoDrill = Core.Toggle["Auto Drill"]:GetState()
    Core.Toggle["Auto Drill"]:SetState(true)
    Core.Robbing = true
    local Case;
    local Start;
    local Proceed;
    local Distance = Vector3.new(0, 5, 0)
    local UsedCases = {}

    local function Reset()
        Robbery.Cooldowns.Jewelry = tick()
        Core.Robbing = false
    end

    if not LocalPlayer.Backpack:FindFirstChild("Drill") then
        Teleport(Utils.FindTable(Client.Locations, "Tool Store Inside").CFrame, function()
            wait(0.2)
            local Response = ReplicatedStorage.FE.BuyGear:InvokeServer("Drill")

            wait(0.2)

            if not LocalPlayer.Backpack:FindFirstChild("Drill") or Response ~= "Good" then
                Client.TP(GetHidingPosition())
                Core.Robbing = false
            end
        end, false)
    end

    wait(0.2)

    if not Core.Robbing then
        return;
    end

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    if #workspace.JewelryCases:GetChildren() < 4 then
        Teleport(CFrame.new(-465, 12, -432), function() wait(1) end)
    end

    function GetCase()
        Case = nil
        for i,v in next, workspace.JewelryCases:GetChildren() do
            if UsedCases[v] == nil then
                Case = v
                break;
            end
        end

        if Case == nil then
            UsedCases = {}
            GetCase()
        end
    end

    function CaseFunction(Value, t)
        if not Value then
            GetCase()
        end

        if t and t >= 15 then
            Proceed = false
            return false
        end

        local t = t or 0
        t += 1
        
        Teleport(CFrame.new(Case.Position - Distance), function()
            wait(0.6)
            local Response = ReplicatedStorage.FE.RobJewelry:InvokeServer(Case)
            wait(0.4)

            if Response == "CaseCooldown" then
                UsedCases[Case] = true
                delay(0.5, function()
                    CaseFunction(false, t)
                end)
            elseif Response == "Distance" then
                Distance -= Vector3.new(0, 1, 0)
                JewelryFloor.Position += Vector3.new(0, 1, 0)
                delay(1, function()
                    CaseFunction(true, t)
                end)
            end
        end, false)
    end
    
    LocalPlayer.Character.Humanoid:EquipTool(LocalPlayer.Backpack:FindFirstChild("Drill"))
    CaseFunction()

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    if Proceed == false then
        Reset()
        return;
    end

    repeat
        wait()
    until LocalPlayer.PlayerGui.GameMenus.RobJewelry.Visible == true and LocalPlayer.PlayerGui.GameMenus.RobJewelry.Position.X.Scale < 1 and LocalPlayer.PlayerGui.GameMenus.RobJewelry.Position.Y.Scale < 1
    wait(0.06)

    VirtualUser:ClickButton1(Vector2.new(math.random(5, 15), math.random(5, 15)), workspace.CurrentCamera.CFrame)

    Start = tick()

    wait(0.8)

    Client.TP(GetHidingPosition())
    wait(1)
    VirtualUser:ClickButton1(Vector2.new(math.random(5, 15), math.random(5, 15)), workspace.CurrentCamera.CFrame)
    Start = tick()

    repeat
        wait(0.2)
    until tonumber(LocalPlayer.PlayerGui.GameMenus.RobJewelry.TimerText.Text:match("%d+.%d")) <= 1.5 or tick() - Start >= 25

    Teleport(CFrame.new(Case.Position - Distance), function()
        repeat
            wait(0.1)
        until tonumber(LocalPlayer.PlayerGui.GameMenus.RobJewelry.TimerText.Text:match("%d+.%d")) == 0 or LocalPlayer.PlayerGui.GameMenus.RobJewelry.Visible == false
        wait(0.4)
    end, false)

    if Core.AntiHelicopter then
        Reset()
        return;
    end

    spawn(function()
        wait(5)

        if LocalPlayer.Backpack:FindFirstChild("Drill") and Settings.AutoRob and not Core.Robbing and not Core.AntiHelicopter then
            wait(26)

            Robbery.Cooldowns.Jewelry = Robbery.CooldownTimes.Jewelry
            pcall(Robbery.Jewelry)
        end
    end)

    Core.Toggle["Auto Drill"]:SetState(OldAutoDrill)

    wait(2)

    Client.TP(GetHidingPosition())

    wait(0.5)

    Reset()
end

--

local SafeValues = {
    [0] = 0;
    [10] = -36;
    [20] = 288;
    [30] = 252;
    [40] = 216;
    [50] = 180;
    [60] = 144;
    [70] = 108;
    [80] = 72;
    [90] = 36;
}

spawn(function()
    while wait(0.1) do
        if Settings.AutoCompleteSafe and LocalPlayer.PlayerGui:FindFirstChild("GameMenus") and LocalPlayer.PlayerGui.GameMenus.Safe.Visible == true and LocalPlayer.PlayerGui.GameMenus.Safe.Position.X.Scale == 0.5 and LocalPlayer.PlayerGui.GameMenus.Safe.Position.Y.Scale == 0.5 then
            local Rotation = SafeValues[tonumber(LocalPlayer.PlayerGui.GameMenus.Safe.Top2.TargetNum.Text)] --// Rotation % SafeValues[10] == 0
            local LocalScript = LocalPlayer.PlayerGui.GameMenus.Safe:FindFirstChild("Movement", true)
            LocalScript.Disabled = true
            wait(Random.new():NextInteger(3, 6))
            LocalScript.Disabled = true
            LocalPlayer.PlayerGui.GameMenus.Safe.Safe.Dial.Rotation = Rotation + Random.new():NextInteger(-10, 10)
            FireButton(LocalPlayer.PlayerGui.GameMenus.Safe.Safe.Dial.ImageLabel)
            FireButton(LocalPlayer.PlayerGui.GameMenus.Safe.ImageLabel.TextButton)
        elseif Settings.AutoPick and LocalPlayer.PlayerGui:FindFirstChild("GameMenus") and LocalPlayer.PlayerGui.GameMenus.Lockpick.Visible == false and Lockpick.Line ~= 1 then
            Lockpick.Line = 1
            Settings.AutoPick = false
            RunService.RenderStepped:Wait()
            Settings.AutoPick = true
        end
        if Settings.AutoDrill and LocalPlayer.PlayerGui:FindFirstChild("GameMenus") and LocalPlayer.PlayerGui.GameMenus.RobJewelry.Visible == true then
            LocalPlayer.PlayerGui.GameMenus.RobJewelry.Drill.goodzone.Size = UDim2.new(1, 0, 1, 0)
        end
        if Utils.GetCharacter(LocalPlayer) and Settings.AutoComplete_ATM and LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.Visible == true then
            for i,v in next, LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.CycleFrame:GetDescendants() do
                if v:IsA("TextLabel") and v.Text == LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.SelectingCode.Text and v.TextColor3 == Color3.new(0, 0, 0) then
                    FireButton(LocalPlayer.PlayerGui.GameMenus.ATM.Hacking.ClickButton)
                end
            end
        elseif Utils.GetCharacter(LocalPlayer) and Settings.AutoRob and not Core.Robbing and not Core.AntiHelicopter and (tick() - Robbery.Cooldowns.ATM > 30 and tick() - Robbery.Cooldowns.House > 30 and tick() - Robbery.Cooldowns.Jewelry > 30) then
            --print(tick() - Robbery.Cooldowns.House, tick() - Robbery.Cooldowns.ATM)
            if tick() - Robbery.Cooldowns.House > Robbery.CooldownTimes.House and Settings.AutoRobHouse then
                spawn(function()
                    Robbery.House()
                end)
            elseif tick() - Robbery.Cooldowns.ATM > Robbery.CooldownTimes.ATM and Settings.AutoRobATMs then
                spawn(function()
                    Robbery.ATM()
                end)
            elseif tick() - Robbery.Cooldowns.Jewelry > Robbery.CooldownTimes.Jewelry and Settings.AutoRobJewelry then
                spawn(function()
                    Robbery.Jewelry()
                end)
            end
        end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if Settings.FullBright == true then
        Lighting.Ambient = Color3.fromRGB(255, 255, 255)
    else
        Lighting.Ambient = Client.Ambient
    end
    if Utils.GetCharacter(LocalPlayer) and Settings.SpeedCheats then
        LocalPlayer.Character.Humanoid.WalkSpeed = Settings.WalkSpeed
        LocalPlayer.Character.Humanoid.JumpPower = Settings.JumpPower
    end
    if Settings.AutoPick and Utils.GetCharacter(LocalPlayer) and LocalPlayer.PlayerGui:FindFirstChild("GameMenus") and LocalPlayer.PlayerGui.GameMenus.Lockpick.Visible == true and Lockpick.Line <= 6 and not Lockpick.Disabled then
        local collides = Lockpick.collisionDetector(LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick[Lockpick.Line])
        if collides and Lockpick.Line <= 6 and LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick:FindFirstChild(Lockpick.Line) then
            local RandomDiv = math.random(1, 5)
            local RandomWait = LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick[Lockpick.Line].Size.Y.Scale / RandomDiv

            if not Lockpick.NoLP then
                wait(RandomWait)
            end

            if Random.new():NextInteger(0, 10) > 2 and tick() - Lockpick.LastDisabled > 1.5 then
                Lockpick.Disabled = true
                wait(0.5)
                Lockpick.Disabled = false
                Lockpick.LastDisabled = tick()
            end

            if LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick:FindFirstChild(Lockpick.Line) and Lockpick.collisionDetector(LocalPlayer.PlayerGui.GameMenus.Lockpick.Pick[Lockpick.Line]) then
                VirtualUser:ClickButton1(Vector2.new(5, 8), workspace.CurrentCamera.CFrame)
                Lockpick.Line = Lockpick.Line + 1
                Lockpick.LPC = 0
                Lockpick.NoLP = false
            else
                if not Lockpick.NoLP and Lockpick.LPC ~= 2 then
                    Lockpick.LPC = Lockpick.LPC + 1
                else
                    Lockpick.NoLP = true
                end
            end
        end
    end
end)

LocalPlayer.PlayerGui.GameMenus.Lockpick.OpenEvent.Event:Connect(function()
    Lockpick.LPC = 0
    Lockpick.NoLP = false
    Lockpick.Line = 1
end)

LocalPlayer.CharacterAdded:Connect(function(Character)
    wait(1)

    Character:WaitForChild("HumanoidRootPart")

    Character.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if Settings.SpeedCheats and Character.Humanoid.JumpPower ~= Settings.JumpPower then
            Character.Humanoid.JumpPower = Settings.JumpPower
        end
    end)

    UpdateGuns()

    hookfunction(LocalPlayer.PlayerGui.GameMenus.RobJewelry.Drill.goodzone.TweenSize, function(...)
        return;
    end)

    if Core["StaminaHook"] then
        Core["StaminaHook"]:Disconnect()
    end
    wait()
    Core["StaminaHook"] = LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina:GetPropertyChangedSignal("Value"):Connect(function()
        if LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina.Value ~= 100 then
            LocalPlayer.PlayerGui.GameGui.BottomLeft.Health["Stamina LS"].Stamina.Value = 100
        end
    end)

    DOT()

    if Settings.AntiHelicopter and ReplicatedStorage.MiscValues.HeliOut.Value == false and not LocalPlayer.Character:FindFirstChildWhichIsA("BodyPosition") then
        local Vector = Vector3.new(math.random(5000, 20000), math.random(100, 300), math.random(5000, 20000))
        local BodyPosition = Instance.new("BodyPosition")
        Core.AntiHelicopter = true
        Client.TP(CFrame.new(Vector))
        BodyPosition.Name = RandomCharacters(math.random(5, 20))
        BodyPosition.Parent = LocalPlayer.Character.HumanoidRootPart
        BodyPosition.MaxForce = Vector3.new(600, 9e20, 600)
        BodyPosition.Position = Vector

        while wait(1) do
            if not Settings.AntiHelicopter or ReplicatedStorage.MiscValues.HeliOut.Value == false or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then
                break;
            end
            BodyPosition.Position = Vector3.new(math.random(Vector.X - 300, Vector.X + 300), Vector.Y, math.random(Vector.Z - 200, Vector.Z + 200))
        end
    end
end)

hookfunction(LocalPlayer.PlayerGui.GameMenus.RobJewelry.Drill.goodzone.TweenSize, function(...)
    return;
end)

if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
    LocalPlayer.Character.Humanoid:GetPropertyChangedSignal("JumpPower"):Connect(function()
        if Settings.SpeedCheats and LocalPlayer.Character.Humanoid.JumpPower ~= Settings.JumpPower then
            LocalPlayer.Character.Humanoid.JumpPower = Settings.JumpPower
        end
    end)
end

Core.Toggle["Disable Detections"]:SetState(Settings.DisableDetections)
Core.Toggle["Infinite Stamina"]:SetState(Settings.InfiniteStamina)

DOT()
Client.ESP()

Client.Notification("Green", "Created by NoTwistedHere")
ReplicatedStorage.ClientBinds.PushPopup:Fire("Be careful when using the script in a server you do not own/trust. \n While the script protects you from Client bans, you can still be reported and/ or recorded. Use InfiniteYield if you want to be able to do more stuff (such as fly)")

--[[

]]

coroutine.wrap(function()
    for i,v in next, getconnections(UserInputService.WindowFocusReleased) do
        v:Disable()
    end

    firesignal(UserInputService.WindowFocused)

    wait(0.5)

    for i,v in next, getconnections(UserInputService.WindowFocused) do
        v:Disable()
    end
end)()

LocalPlayer.Backpack.ChildAdded:Connect(function(Obj)
    if Obj:FindFirstChild("GunSettings") then
        UpdateGuns()
    end
end)

ReplicatedStorage.MiscValues.HeliOut:GetPropertyChangedSignal("Value"):Connect(function()
    if Settings.AntiHelicopter and ReplicatedStorage.MiscValues.HeliOut.Value == false and not LocalPlayer.Character:FindFirstChildWhichIsA("BodyPosition") then
        local Vector = Vector3.new(math.random(5000, 20000), math.random(100, 300), math.random(5000, 20000))
        local BodyPosition = Instance.new("BodyPosition")
        Core.AntiHelicopter = true
        BodyPosition.Name = RandomCharacters(math.random(5, 20))
        BodyPosition.Parent = LocalPlayer.Character.HumanoidRootPart
        BodyPosition.MaxForce = Vector3.new(600, 9e20, 600)
        BodyPosition.Position = Vector

        while wait(1) do
            if not Settings.AntiHelicopter or ReplicatedStorage.MiscValues.HeliOut.Value == false or not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") or BodyPosition.Parent ~= LocalPlayer.Character.HumanoidRootPart then
                Client.TP(CFrame.new(-481.569, 23.948, 701.996))
                Core.AntiHelicopter = false
                BodyPosition:Destroy()
                break;
            end
            BodyPosition.Position = Vector3.new(math.random(Vector.X - 300, Vector.X + 300), Vector.Y, math.random(Vector.Z - 200, Vector.Z + 200))
        end
    end
end)

Players.PlayerAdded:Connect(function(Player)
    if Player:IsInGroup(4328109) and Player:GetRankInGroup(4328109) > 1 then
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "PRC Notification",
            Text = string.format("%s has joined the game (%s)", Player.Name, Player:GetRoleInGroup(4328109) or "Not Found"),
            Icon = nil,
            Duration = 8
        })
    end
end)

Players.PlayerAdded:Connect(function(Player)
    Player.CharacterAdded:Connect(function()
        CharAdded(Player)
    end)
end)

Players.PlayerAdded:Connect(Connect)

for i,v in next, Players:GetChildren() do
    Connect(v)
end

for i,v in pairs(Players:GetPlayers()) do
    spawn(function()
        v.CharacterAdded:Connect(function()
            CharAdded(v)
        end)
        if v.Character then
            CharAdded(v)
        end
    end)
end

LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

UpdateGuns()

--[[

local LocalPlayer = Players.LocalPlayer

if LocalPlayer.PlayerGui.GameMenus.Safe.Safe.Dial.ImageLabel.Rotation > Safe1[LocalPlayer.PlayerGui.GameMenus.Safe.Top2.TargetNum] then --> Not Finished
end

]]

--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
--
-- 
